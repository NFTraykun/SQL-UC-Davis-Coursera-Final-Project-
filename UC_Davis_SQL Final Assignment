
Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment.
In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would.
For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer.
You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer.
You will be required to prepare the dataset for the analysis you choose to do.
As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet."
It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work.
You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers.
If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.



Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
i. Attribute table = 10,000
ii. Business table = 10,000
iii. Category table = 10,000
iv. Checkin table = 10,000
v. elite_years table = 10,000
vi. friend table = 10,000
vii. hours table = 10,000
viii. photo table = 10,000
ix. review table = 10,000
x. tip table = 10,000
xi. user table = 10,000

--Do this for every table
SELECT
	*
FROM
	table_name
;

2. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.

i. Business = 10,000 id
ii. Hours = 1,562 business_id
iii. Category = 2,643 business_id
iv. Attribute = 1,115 business_id
v. Review = 10,000 id
vi. Checkin = 493 business_id
vii. Photo = 10,000 id
viii. Tip = 537 user_id
ix. User = 10,000 id
x. Friend = 11 user_id
xi. Elite_years = 2,780 user_id

Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.
	
--Do this for every relative primary/foreign key in every table
SELECT
	DISTINCT(column_name)
FROM
	table_name
;


3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: No, there were not any columns with null values in the user table
	
	
	SQL code used to arrive at answer:
	
--used every column name in the user table to check for null values
SELECT
    *
FROM
    user
WHERE
    column_name IS NULL
;
	
4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	
	ii. Table: Business, Column: Stars
	
		min: 1		max: 5		avg: 3.6549
		
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.19414
		
	
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000		avg: 24.2995
		
--Do this for each relative field above replacing column_names and table_names
SELECT
    MIN(column_name)
    ,MAX(column_name)
    ,AVG(column_name)
FROM
    table_name
;


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer:
	
	SELECT
		city
		,review_count
	FROM
		business
	ORDER BY
		review_count DESC
	;
	
	Copy and Paste the Result Below:
	
	+------------+--------------+
| city       | review_count |
+------------+--------------+
| Las Vegas  |         3873 |
| Montréal   |         1757 |
| Gilbert    |         1549 |
| Las Vegas  |         1410 |
| Las Vegas  |         1389 |
| Las Vegas  |         1252 |
| Las Vegas  |         1116 |
| Las Vegas  |         1084 |
| Las Vegas  |          961 |
| Gilbert    |          902 |
| Las Vegas  |          864 |
| Scottsdale |          823 |
| Las Vegas  |          821 |
| Las Vegas  |          786 |
| Henderson  |          785 |
| Toronto    |          778 |
| Las Vegas  |          768 |
| Las Vegas  |          758 |
| Scottsdale |          726 |
| Cleveland  |          723 |
| Las Vegas  |          720 |
| Charlotte  |          715 |
| Phoenix    |          711 |
| Las Vegas  |          706 |
| Phoenix    |          700 |
+---------------------------+
	
6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT
    city
    ,stars
    ,COUNT(stars) AS number_of_reviews_by_star_rating
FROM
    business
WHERE
    city = 'Avon'
GROUP BY
    stars
;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+------+-------+----------------------------------+
| city | stars | number_of_reviews_by_star_rating |
+------+-------+----------------------------------+
| Avon |   1.5 |                                1 |
| Avon |   2.5 |                                2 |
| Avon |   3.5 |                                3 |
| Avon |   4.0 |                                2 |
| Avon |   4.5 |                                1 |
| Avon |   5.0 |                                1 |
+------+-------+----------------------------------+

ii. Beachwood

SQL code used to arrive at answer:

	SELECT
		city
		,stars
		,COUNT(stars) AS number_of_reviews_by_star_rating
	FROM
		business
	WHERE
		city = 'Beachwood'
	GROUP BY
		stars
	;


Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

	+-----------+-------+----------------------------------+
	| city      | stars | number_of_reviews_by_star_rating |
	+-----------+-------+----------------------------------+
	| Beachwood |   2.0 |                                1 |
	| Beachwood |   2.5 |                                1 |
	| Beachwood |   3.0 |                                2 |
	| Beachwood |   3.5 |                                2 |
	| Beachwood |   4.0 |                                1 |
	| Beachwood |   4.5 |                                2 |
	| Beachwood |   5.0 |                                5 |
	+-----------+-------+----------------------------------+
		


7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
		SELECT
			name
			,review_count
		FROM
			user
		ORDER BY
			review_count DESC
		LIMIT
			3
		;
	
	Copy and Paste the Result Below:
		
		+--------+--------------+
		| name   | review_count |
		+--------+--------------+
		| Gerald |         2000 |
		| Sara   |         1629 |
		| Yuri   |         1339 |
		+--------+--------------+

8. Does posing more reviews correlate with more fans?

	Please explain your findings and interpretation of the results:
	
	Using this query,
	
	SELECT
		review_count
		,fans
	FROM
		user
	ORDER BY
		--review_count DESC
		fans DESC
	;
	
	I yielded this result,
	
	+--------------+------+
	| review_count | fans |
	+--------------+------+
	|          609 |  503 |
	|          968 |  497 |
	|         1153 |  311 |
	|         2000 |  253 |
	|          930 |  173 |
	|          813 |  159 |
	|          377 |  133 |
	|         1215 |  126 |
	|          862 |  124 |
	|          834 |  120 |
	|          861 |  115 |
	|          408 |  111 |
	|          255 |  105 |
	|         1039 |  104 |
	|          694 |  101 |
	|         1246 |  101 |
	|          307 |   96 |
	|          584 |   89 |
	|          842 |   85 |
	|          220 |   84 |
	|          408 |   81 |
	|          178 |   80 |
	|          754 |   78 |
	|         1339 |   76 |
	|          161 |   73 |
	+--------------+------+
	
	Leading me to believe there is a poor correlation between how many reviews are posted after a certain amount of reviews.
	The reason being is there are multiple instances of people with a similar amount of reviews but very different amount of fans.
	If this were to be visualized on a chart it would most likely be flat up to a certain amount of reviews and then be all over the place.

9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer:
	
		There are more reviews with the word "love" in it than there are reviews with the word "hate" in it.
		This is the result yielded from my query:
		+------------+------------+
		| love_count | hate_count |
		+------------+------------+
		|       1780 |        232 |
		+------------+------------+

	SQL code used to arrive at answer:
		SELECT
			COUNT(text) AS love_count,
				(SELECT
					COUNT(text)
				FROM
					review 
				WHERE
					text LIKE '%hate%') AS hate_count
		FROM
			review
		WHERE
			text LIKE '%love%'
		;

	
	
10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
		SELECT
			name
			,fans
		FROM
			user
		ORDER BY
			fans DESC
		LIMIT
			10
		;
	
	Copy and Paste the Result Below:
	
		+-----------+------+
		| name      | fans |
		+-----------+------+
		| Amy       |  503 |
		| Mimi      |  497 |
		| Harald    |  311 |
		| Gerald    |  253 |
		| Christine |  173 |
		| Lisa      |  159 |
		| Cat       |  133 |
		| William   |  126 |
		| Fran      |  124 |
		| Lissa     |  120 |
		+-----------+------+

	
		

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating.
Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.

i. Do the two groups you chose to analyze have a different distribution of hours?

	The distribution of hours is different and it seems the correlation is less hours of operation and opening later and closing sooner leads to higher reviews.
	
ii. Do the two groups you chose to analyze have a different number of reviews?

	The low rated have 1 low count and 1 mid count and the high reviews have 1 low, 1 mid, and 1 high. Overall, the groups are pretty similar in this regard with one outlier.
	However, more data is needed to give a more concrete answer as 5 data points is not a very large sample size.
	
iii. Are you able to infer anything from the location data provided between these two groups? Explain.
	
	No, they are all 5 in different postal codes and the neighborhood field is empty.
	I would need more data to accurately draw any conclusions based off of location.

SQL code used for analysis:

	--joining the business, category and hours table to make all info needed available.
	--inner joined them on id's to avoid duplicates
	--then filtered for the city and category and grouped by star rating
	--also pulled relevant location data from the business table
	SELECT
		business.name
		,business.city
		,business.stars
		,business.review_count
		,business.address
		,business.postal_code
		,business.neighborhood
		,category.category
		,hours.hours
	FROM
		business 
	INNER JOIN
		category ON business.id = category.business_id
	INNER JOIN
		hours ON business.id = hours.business_id
	WHERE
		(city = 'Phoenix' AND category = 'Restaurants')
	GROUP BY
		stars
	;
	
	+----------------------------------------+---------+-------+--------------+-------------------------+-------------+--------------+-------------+----------------------+
	| name                                   | city    | stars | review_count | address                 | postal_code | neighborhood | category    | hours                |
	+----------------------------------------+---------+-------+--------------+-------------------------+-------------+--------------+-------------+----------------------+
	| McDonald's                             | Phoenix |   2.0 |            8 | 1850 S 7th St           | 85004       |              | Restaurants | Saturday|5:00-0:00   |
	| Gallagher's                            | Phoenix |   3.0 |           60 | 751 E Union Hls Dr      | 85024       |              | Restaurants | Saturday|9:00-2:00   |
	| Five Guys                              | Phoenix |   3.5 |           63 | 2641 N 44th St, Ste 100 | 85008       |              | Restaurants | Saturday|10:00-22:00 |
	| Bootleggers Modern American Smokehouse | Phoenix |   4.0 |          431 | 3375 E Shea Blvd        | 85028       |              | Restaurants | Saturday|11:00-22:00 |
	| Charlie D's Catfish & Chicken          | Phoenix |   4.5 |            7 | 1153 E Jefferson St     | 85034       |              | Restaurants | Saturday|11:00-18:00 |
	+----------------------------------------+---------+-------+--------------+-------------------------+-------------+--------------+-------------+----------------------+
		
2. Group business based on the ones that are open and the ones that are closed.
What differences can you find between the ones that are still open and the ones that are closed?
List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:
         
		 The ones that are closed have a lower average amount of reviews.
         
ii. Difference 2:
         
         The ones open have a much higher amount of max reviews.
         
SQL code used for analysis:

	SELECT
		AVG(stars)
		,AVG(review_count)
		,MIN(stars)
		,MIN(review_count)
		,MAX(stars)
		,MAX(review_count)
		,is_open
	FROM
		business
	GROUP BY
		is_open
	;
	
	+---------------+-------------------+------------+-------------------+------------+-------------------+---------+
	|    AVG(stars) | AVG(review_count) | MIN(stars) | MIN(review_count) | MAX(stars) | MAX(review_count) | is_open |
	+---------------+-------------------+------------+-------------------+------------+-------------------+---------+
	| 3.52039473684 |     23.1980263158 |        1.0 |                 3 |        5.0 |               700 |       0 |
	| 3.67900943396 |     31.7570754717 |        1.0 |                 3 |        5.0 |              3873 |       1 |
	+---------------+-------------------+------------+-------------------+------------+-------------------+---------+
	
3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include:
Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them,
predicting the overall star rating for a business, predicting the number of fans a user will have, and so on.
These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve.
Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:
         
		 I want to find out what factors contribute the most to a higher star rating.
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

			I will need the star rating data from the business table and also the 3 factors in the review table along with the review_count.
			This will give a high level snippet as to what shows up in high ratings the most.
                  
iii. Output of your finished dataset:
         
    +-------+-------------------+--------+-------+------+
		| stars | number_of_reviews | useful | funny | cool |
		+-------+-------------------+--------+-------+------+
		|   5.0 |                15 |      7 |     0 |    0 |
		|   4.0 |                20 |      1 |     0 |    1 |
		|   3.5 |                 7 |      0 |     0 |    0 |
		|   3.0 |                15 |      1 |     0 |    2 |
		|   2.0 |                17 |      0 |     0 |    0 |
		|   1.5 |               431 |      3 |     0 |    2 |
		|   1.0 |                 3 |      0 |     0 |    0 |
		+-------+-------------------+--------+-------+------+
		 
iv. Provide the SQL code you used to create your final dataset:

		SELECT
			business.stars
			,SUM(business.review_count) AS number_of_reviews
			,SUM(review.useful) AS useful
			,SUM(review.funny) AS funny
			,SUM(review.cool) AS cool
		FROM
			business
		INNER JOIN
			review ON business.id = review.id
		GROUP BY
			business.stars
		ORDER BY
			business.stars DESC
		;

According to this data it seems that being Useful is the most important factor with low correlation to the other factors and hihg star ratings.
